<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.xiaolin</groupId>
  <artifactId>spark-scala</artifactId>
  <version>1.0</version>
  <inceptionYear>2008</inceptionYear>

  <repositories>
    <repository>
      <id>cloudera</id>
      <url>https://repository.cloudera.com/artifactory/cloudera-repos/</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
<!--    <repository>-->
<!--      <id>aliyun</id>-->
<!--      <url>https://maven.aliyun.com/nexus/content/groups/public/</url>-->
<!--      <releases>-->
<!--        <enabled>true</enabled>-->
<!--      </releases>-->
<!--      <snapshots>-->
<!--        <enabled>false</enabled>-->
<!--      </snapshots>-->
<!--    </repository>-->
  </repositories>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <hadoop.version>2.6.0-cdh5.15.1</hadoop.version>
    <scala.version>2.11.8</scala.version>
    <spark.version>2.4.7</spark.version>
    <hbase.version>1.2.0-cdh5.15.1</hbase.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-core_2.11</artifactId>
      <version>${spark.version}</version>
    </dependency>
     <dependency>
          <groupId>org.apache.spark</groupId>
          <artifactId>spark-sql_2.11</artifactId>
          <version>${spark.version}</version>
<!--         <exclusions>-->
<!--           <exclusion>-->
<!--             <artifactId>janino</artifactId>-->
<!--             <groupId>org.codehaus.janino</groupId>-->
<!--           </exclusion>-->
<!--         </exclusions>-->
     </dependency>
    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-mllib_2.11</artifactId>
      <version>${spark.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-streaming_2.11</artifactId>
      <version>${spark.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-streaming-kafka-0-10_2.11</artifactId>
      <version>${spark.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-hive_2.11</artifactId>
      <version>${spark.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.hadoop</groupId>
      <artifactId>hadoop-client</artifactId>
      <version>${hadoop.version}</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.janino</groupId>
      <artifactId>janino</artifactId>
      <version>3.0.8</version>
    </dependency>
<!--    <dependency>-->
<!--      <groupId>org.apache.hadoop</groupId>-->
<!--      <artifactId>hadoop-yarn</artifactId>-->
<!--      <version>${hadoop.version}</version>-->
<!--    </dependency>-->

    <dependency>
      <groupId>org.scala-lang</groupId>
      <artifactId>scala-library</artifactId>
      <version>${scala.version}</version>
    </dependency>
    <!--config-->
    <dependency>
      <groupId>com.typesafe</groupId>
      <artifactId>config</artifactId>
      <version>1.2.0</version>
    </dependency>
    <!--ip-->
    <dependency>
      <groupId>org.lionsoul</groupId>
      <artifactId>ip2region</artifactId>
      <version>1.7.2</version>
    </dependency>

    <!-- https://mvnrepository.com/artifact/org.scalikejdbc/scalikejdbc -->
    <dependency>
      <groupId>org.scalikejdbc</groupId>
      <artifactId>scalikejdbc_2.11</artifactId>
      <version>3.3.5</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/org.scalikejdbc/scalikejdbc-config -->
    <dependency>
      <groupId>org.scalikejdbc</groupId>
      <artifactId>scalikejdbc-config_2.11</artifactId>
      <version>3.3.5</version>
    </dependency>

    <!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java -->
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <version>8.0.16</version>
    </dependency>
    <!--json-->
    <dependency>
      <groupId>com.alibaba</groupId>
      <artifactId>fastjson</artifactId>
      <version>1.2.60</version>
    </dependency>
    <dependency>
      <groupId>net.sf.json-lib</groupId>
      <artifactId>json-lib</artifactId>
      <version>2.4</version>
      <classifier>jdk15</classifier>
    </dependency>

    <dependency>
      <groupId>com.google.code.gson</groupId>
      <artifactId>gson</artifactId>
      <version>2.8.1</version>
    </dependency>

    <!--presto-->
    <dependency>
      <groupId>com.facebook.presto</groupId>
      <artifactId>presto-jdbc</artifactId>
      <version>0.227</version>
    </dependency>
      <!--jedis-->
      <dependency>
          <groupId>redis.clients</groupId>
          <artifactId>jedis</artifactId>
          <version>3.1.0</version>
      </dependency>

    <!-- https://mvnrepository.com/artifact/org.influxdb/influxdb-java -->
    <dependency>
      <groupId>org.influxdb</groupId>
      <artifactId>influxdb-java</artifactId>
      <version>2.15</version>
    </dependency>

    <!-- https://mvnrepository.com/artifact/org.postgresql/postgresql -->
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <version>42.4.1</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/org.elasticsearch/elasticsearch-spark-20 -->
    <dependency>
      <groupId>org.elasticsearch</groupId>
      <artifactId>elasticsearch-spark-20_2.11</artifactId>
      <version>7.8.1</version>
    </dependency>


    <dependency>
      <groupId>org.apache.hbase</groupId>
      <artifactId>hbase-client</artifactId>
      <version>${hbase.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.hbase</groupId>
      <artifactId>hbase-server</artifactId>
      <version>${hbase.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.hbase</groupId>
      <artifactId>hbase-common</artifactId>
      <version>${hbase.version}</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/org.apache.hive/hive-jdbc -->
    <dependency>
      <groupId>org.apache.hive</groupId>
      <artifactId>hive-jdbc</artifactId>
      <version>2.3.4</version>
    </dependency>
    <dependency>
      <groupId>org.apache.kylin</groupId>
      <artifactId>kylin-jdbc</artifactId>
      <version> 3.1.0</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/com.belerweb/pinyin4j -->
    <dependency>
      <groupId>com.belerweb</groupId>
      <artifactId>pinyin4j</artifactId>
      <version>2.5.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.hive</groupId>
      <artifactId>hive-exec</artifactId>
      <version>2.3.4</version>
    </dependency>
    <dependency>
      <groupId>org.apache.hive</groupId>
      <artifactId>hive-cli</artifactId>
      <version>1.1.1</version>
    </dependency>

    <!-- https://mvnrepository.com/artifact/org.apache.phoenix/phoenix-core -->
    <dependency>
      <groupId>org.apache.phoenix</groupId>
      <artifactId>phoenix-client-hbase-2.3</artifactId>
      <version>5.1.1</version>
<!--      <exclusions>-->
<!--        <exclusion>-->
<!--          <groupId>com.google.guava</groupId>-->
<!--          <artifactId>guava</artifactId>-->
<!--        </exclusion>-->
<!--      </exclusions>-->

      <!-- https://mvnrepository.com/artifact/com.github.hazendaz.spotbugs/spotbugs-maven-plugin -->
    </dependency>

    <!--datax- -->
<!--    <dependency>-->
<!--      <groupId>com.alibaba.datax</groupId>-->
<!--      <artifactId>datax-core</artifactId>-->
<!--      <version>0.0.1-SNAPSHOT</version>-->
<!--    </dependency>-->
<!--    <dependency>-->
<!--      <groupId>com.alibaba.datax</groupId>-->
<!--      <artifactId>mysqlreader</artifactId>-->
<!--      <version>0.0.1-SNAPSHOT</version>-->
<!--    </dependency>-->
<!--    <dependency>-->
<!--      <groupId>com.alibaba.datax</groupId>-->
<!--      <artifactId>mysqlwriter</artifactId>-->
<!--      <version>0.0.1-SNAPSHOT</version>-->
<!--    </dependency>-->
<!--      <dependency>-->
<!--          <groupId>org.jetbrains</groupId>-->
<!--          <artifactId>annotations</artifactId>-->
<!--          <version>RELEASE</version>-->
<!--          <scope>compile</scope>-->
<!--      </dependency>-->

      <!--    <dependency>-->
<!--      <groupId>com.alibaba.datax</groupId>-->
<!--      <artifactId>datax-all</artifactId>-->
<!--      <version>0.0.1-SNAPSHOT</version>-->
<!--    </dependency>-->


  </dependencies>

  <build>
    <plugins>
      <!-- 在maven项目中既有java又有scala代码时配置 maven-scala-plugin 插件打包时可以将两类代码一起打包 -->
      <plugin>
        <groupId>org.scala-tools</groupId>
        <artifactId>maven-scala-plugin</artifactId>
        <version>2.15.2</version>
        <executions>
          <execution>
            <goals>
              <goal>compile</goal>
              <goal>testCompile</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

    </plugins>
  </build>

<!--<build>-->
<!--  <plugins>-->
<!--    <plugin>-->
<!--      <artifactId>maven-assembly-plugin</artifactId>-->
<!--      <configuration>-->
<!--        <archive>-->
<!--          <manifest>-->
<!--            <mainClass>com.allen.capturewebdata.Main</mainClass>-->
<!--          </manifest>-->
<!--        </archive>-->
<!--        <descriptorRefs>-->
<!--          <descriptorRef>jar-with-dependencies</descriptorRef>-->
<!--        </descriptorRefs>-->
<!--      </configuration>-->
<!--    </plugin>-->
<!--  </plugins>-->
<!--</build>-->


</project>
